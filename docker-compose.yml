version: '3'
services:
  ## Postgres Docker Compose Config
  postgres-user:
    container_name: postgres-user
    image: postgres:alpine3.16
    environment:
      POSTGRES_DB: user-service
      POSTGRES_USER: mateuszuran
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./postgres-user:/data/postgres
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: unless-stopped

  postgres-card:
    container_name: postgres-card
    image: postgres:alpine3.16
    environment:
      POSTGRES_DB: card-service
      POSTGRES_USER: mateuszuran
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./postgres-card:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  mongodb-vehicle:
    container_name: mongodb-vehicle
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mateuszuran
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: root-db
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./mongodb-vehicle:/data/db
    ports:
      - '27017:27017'
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "8282:80"
    restart: unless-stopped


  ## Keycloak configuration
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:5.7
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:legacy
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: keycloak-mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: ptd-admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - "8080:8080"
    depends_on:
      - keycloak-mysql

  ## Broker
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.10-1-ubi8
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:5.4.10-1-ubi8
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
  ## Eureka Server
  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    image: discovery-server
    container_name: discovery-server
    hostname: discovery-server
    networks:
      - auth-network
    ports:
      - "8761:8761"
    depends_on:
      - zipkin

  api-gateway:
    build:
      context: ./api-gateway/
      dockerfile: Dockerfile
    image: api-gateway:1.1
    container_name: api-gateway
    networks:
      - auth-network
    ports:
      - "8181:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - discovery-server
volumes:
  postgres-user:
  postgres-card:
  pgadmin:
  mongodb-vehicle:

networks:
  auth-network:
    external: true